{
	"name": "df_dervi_other_default",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText5",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_df_output",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "ds_df_output",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          salesorderID as string,",
				"          ProductName as string,",
				"          CustomerID as string,",
				"          salesAmount as string,",
				"          {Quantity } as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 derive(salesorderID = iifNull(salesorderID,'99999',salesorderID),",
				"          ProductName = iifNull(ProductName,'UNKNOWN',ProductName)) ~> derivedColumn1",
				"derivedColumn1 split(ProductName=='samsung',",
				"     disjoint: false) ~> split1@(OtherPhones, SumSung)",
				"split1@OtherPhones sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CourseID as string,",
				"          CourseName as string,",
				"          StudentID as string",
				"     ),",
				"     partitionFileNames:['SamPhones.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1",
				"split1@SumSung sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CourseID as string,",
				"          CourseName as string,",
				"          StudentID as string",
				"     ),",
				"     partitionFileNames:['Other.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink2"
			]
		}
	}
}