{
	"name": "pl_OnPRemtoCLoud_Mig_Incremental_load_Master",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select * from [dbo].[controltable] where Indicator in (0,1)",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_AzureSqlTable2_ONCloud",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().Load_Type,'incremental')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Copy data3",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "ds_SqlServerTable2_source",
												"type": "DatasetReference",
												"parameters": {
													"Source_Object_Schema": {
														"value": "@item().Source_Object_Schema",
														"type": "Expression"
													},
													"Source_Object_Name": {
														"value": "@item().Source_Object_Name",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "ds_sink_project",
												"type": "DatasetReference",
												"parameters": {
													"Target_Location": {
														"value": "@item().Target_Location",
														"type": "Expression"
													},
													"Target_Object_Name": {
														"value": "@item().Target_Object_Name",
														"type": "Expression"
													}
												}
											}
										]
									}
								],
								"ifTrueActivities": [
									{
										"name": "Lookup2",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"sqlReaderQuery": {
													"value": "@if(equals(toLower(item().Load_Type), 'incremental'), concat('SELECT MAX(', item().Watermark_column, ') AS Watermark_Value FROM [', item().Source_Object_Schema, '].', item().Source_Object_Name), 'SELECT NULL AS Watermark_Value')",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "ds_SqlServerTable2_source",
												"type": "DatasetReference",
												"parameters": {
													"Source_Object_Schema": {
														"value": "@item().Source_Object_Schema",
														"type": "Expression"
													},
													"Source_Object_Name": {
														"value": "@item().Source_Object_Name",
														"type": "Expression"
													}
												}
											},
											"firstRowOnly": false
										}
									},
									{
										"name": "Copy data1",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "Lookup2",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"sqlReaderQuery": {
													"value": "@concat('Select * from ' ,item().Source_Object_Schema,'.',item().Source_Object_Name,' where ',item().watermark_column,'>',item().watermark_value)",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "ds_SqlServerTable2_source",
												"type": "DatasetReference",
												"parameters": {
													"Source_Object_Schema": {
														"value": "@item().Source_Object_Schema",
														"type": "Expression"
													},
													"Source_Object_Name": {
														"value": "@item().Source_Object_Name",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "ds_sink_project",
												"type": "DatasetReference",
												"parameters": {
													"Target_Location": {
														"value": "@item().Target_Location",
														"type": "Expression"
													},
													"Target_Object_Name": {
														"value": "@concat(item().Target_Object_Name,'.csv')",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "Stored procedure1",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Copy data1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[sp_UpdateWatermark]",
											"storedProcedureParameters": {
												"Source_Object_Name": {
													"value": {
														"value": "@item().Source_Object_Name",
														"type": "Expression"
													},
													"type": "String"
												},
												"Watermark_Column": {
													"value": {
														"value": "@item().Watermark_Column",
														"type": "Expression"
													},
													"type": "String"
												},
												"Watermark_Value": {
													"value": {
														"value": "@activity('Lookup2').output.value[0].watermark_value",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "ls_AzureSQLDB",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "Stored procedure2",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Copy data1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[sp_UpdateLogTable]",
											"storedProcedureParameters": {
												"CopyActivity_End_Time": {
													"value": {
														"value": "@{utcnow()}",
														"type": "Expression"
													},
													"type": "String"
												},
												"CopyActivity_queuingDuration_in_secs": {
													"value": {
														"value": "@{activity('Copy data1').output.executionDetails[0].detailedDurations.queuingDuration}",
														"type": "Expression"
													},
													"type": "String"
												},
												"CopyActivity_Start_Time": {
													"value": {
														"value": "@{activity('Copy data1').output.executionDetails[0].start}",
														"type": "Expression"
													},
													"type": "String"
												},
												"CopyActivity_transferDuration_in_secs": {
													"value": {
														"value": "@{activity('Copy data1').output.copyDuration}",
														"type": "Expression"
													},
													"type": "String"
												},
												"copyDuration_in_secs": {
													"value": {
														"value": "@{activity('Copy data1').output.copyDuration}",
														"type": "Expression"
													},
													"type": "String"
												},
												"DataFactory_Name": {
													"value": {
														"value": "@{pipeline().DataFactory}",
														"type": "Expression"
													},
													"type": "String"
												},
												"DataRead": {
													"value": {
														"value": "@{activity('Copy data1').output.dataRead}",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"Destination": {
													"value": {
														"value": "@{item().Target_Object_Name}",
														"type": "Expression"
													},
													"type": "String"
												},
												"effectiveIntegrationRuntime": {
													"value": {
														"value": "@{activity('Copy data1').output.effectiveIntegrationRuntime}",
														"type": "Expression"
													},
													"type": "String"
												},
												"Execution_Status": {
													"value": {
														"value": "@{activity('Copy data1').output.executionDetails[0].status}",
														"type": "Expression"
													},
													"type": "String"
												},
												"Pipeline_Name": {
													"value": {
														"value": "@{pipeline().Pipeline}",
														"type": "Expression"
													},
													"type": "String"
												},
												"rowsCopied": {
													"value": {
														"value": "@{activity('Copy data1').output.rowsCopied}",
														"type": "Expression"
													},
													"type": "String"
												},
												"RunID": {
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													},
													"type": "String"
												},
												"Sink_Type": {
													"value": {
														"value": "@{activity('Copy data1').output.executionDetails[0].sink.type}",
														"type": "Expression"
													},
													"type": "String"
												},
												"Source": {
													"value": {
														"value": "@{item().Source_System_Name}",
														"type": "Expression"
													},
													"type": "String"
												},
												"Source_Type": {
													"value": {
														"value": "@{activity('Copy data1').output.executionDetails[0].source}",
														"type": "Expression"
													},
													"type": "String"
												},
												"TriggerId": {
													"value": {
														"value": "@{pipeline().TriggerId}",
														"type": "Expression"
													},
													"type": "String"
												},
												"TriggerName": {
													"value": {
														"value": "@{pipeline().TriggerName}",
														"type": "Expression"
													},
													"type": "String"
												},
												"TriggerTime": {
													"value": {
														"value": "@{pipeline().TriggerTime}",
														"type": "Expression"
													},
													"type": "String"
												},
												"TriggerType": {
													"value": {
														"value": "@{pipeline().TriggerType}",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "ls_AzureSQLDB",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"annotations": []
	}
}